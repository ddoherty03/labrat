#! /usr/bin/env ruby
# frozen_string_literal: true

require_relative '../lib/labrat'

begin
  # We need to know whether the verbose option is present before any
  # examination of the config files or command-line options is done, so this
  # is a bit of a hack.
  verb = ARGV.include?('--verbose') || ARGV.include?('-v')
  ops = Labrat::Options.set_options(ARGV, verbose: verb)
  if ops.msg
    warn ops.msg
    exit(1)
  end
  ops.to_hash.report("\nFinal option set") if verb

  # There are three possible sources of label text: (1) the non-option
  # command-line arguments, if any, are always included, (3) paragraphs in the
  # file specified by the --in-file argument, if any, are always included, and (3)
  # paragraphs in standard input are included if there are no non-option
  # arguments and no --in-file argument.

  non_ops = ARGV.grep_v(/\A--?/)
  texts = non_ops.empty? ? [] : non_ops.join(' ').split(ops.label_sep)
  texts +=
    if ops.template
      []
    elsif !ops.in_file.blank?
      Labrat.read_label_texts(ops.in_file, ops.nl_sep)
    elsif non_ops.empty?
      Labrat.read_label_texts(nil, ops.nl_sep)
    else
      []
    end

  lab = Labrat::Label.new(texts, ops).generate
  if ops.view
    lab.view
  else
    lab.print
  end
rescue Labrat::OptionError => e
  warn "Error: #{e}: exiting"
  exit(1)
rescue Labrat::EmptyLabelError => e
  warn "Error: #{e}: refusing to print"
  exit(1)
rescue Labrat::RecursionError => e
  warn "Error: #{e}: exiting"
  exit(1)
rescue Labrat::LabelNameError => e
  warn "Error: #{e}: exiting"
  lab_names = Labrat::LabelDb.known_names
  if lab_names.empty?
    warn "  Have you run labrat-install yet?"
  else
    warn "  Try `labrat --list-labels` to list known labels."
  end
  exit(1)
rescue Labrat::DimensionError => e
  warn "Error: #{e}: exiting"
  exit(1)
rescue Prawn::Errors::CannotFit
  warn "Error: #{e}:"
  warn "Page and label dimensions leave no room for labels."
  warn "  Try `labrat -T -v -V` to diagnose the problem."
  exit(1)
rescue Prawn::Errors::UnknownFont => e
  warn "Error: #{e}:"
  warn "  Builtin fonts are Times-Roman, Courier, and Helvetica"
  exit(1)
end
